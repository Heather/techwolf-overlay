diff -r aae0229b1c97 -r e1f0e4441761 autobuild.xml
--- a/autobuild.xml	Fri Mar 10 11:45:38 2017 +0100
+++ b/autobuild.xml	Tue Mar 07 20:26:23 2017 +0100
@@ -869,11 +869,11 @@
             <key>archive</key>
             <map>
               <key>hash</key>
-              <string>e3659aa7b670a8fbdfb1b820254abb44</string>
+              <string>b0b32155319c6441997c034bdae28a22</string>
               <key>hash_algorithm</key>
               <string>md5</string>
               <key>url</key>
-              <string>http://downloads.phoenixviewer.com/glod-1.0pre3.201703081158-windows-201703081158.tar.bz2</string>
+              <string>http://automated-builds-secondlife-com.s3.amazonaws.com/hg/repo/glod_3p-update-glod/rev/296895/arch/CYGWIN/installer/glod-1.0pre4.296895-windows-296895.tar.bz2</string>
             </map>
             <key>name</key>
             <string>windows</string>
diff -r aae0229b1c97 -r e1f0e4441761 indra/cmake/Copy3rdPartyLibs.cmake
--- a/indra/cmake/Copy3rdPartyLibs.cmake	Fri Mar 10 11:45:38 2017 +0100
+++ b/indra/cmake/Copy3rdPartyLibs.cmake	Tue Mar 07 20:26:23 2017 +0100
@@ -38,7 +38,7 @@
         libapriconv-1.dll
         ssleay32.dll
         libeay32.dll
-        #glod.dll    
+        glod.dll    
         libhunspell.dll
         )
 
diff -r aae0229b1c97 -r e1f0e4441761 indra/newview/llfloatermodelpreview.cpp
--- a/indra/newview/llfloatermodelpreview.cpp	Fri Mar 10 11:45:38 2017 +0100
+++ b/indra/newview/llfloatermodelpreview.cpp	Tue Mar 07 20:26:23 2017 +0100
@@ -2526,43 +2526,7 @@
 				U32 num_indices = mVertexBuffer[5][mdl][i]->getNumIndices();
 				if (num_indices > 2)
 				{
-					// <FS:ND> Fix glod so it works when just using the opengl core profile
-					LLStrider<LLVector3> vertex_strider;
-					LLStrider<LLVector3> normal_strider;
-					LLStrider<LLVector2> tc_strider;
-
-					LLStrider< U16 > index_strider;
-					buff->getIndexStrider( index_strider );
-
-					glodVBO vbo = {};
-
-					if( buff->hasDataType( LLVertexBuffer::TYPE_VERTEX ) )
-					{
-						buff->getVertexStrider( vertex_strider );
-						vbo.mV.p = vertex_strider.get();
-						vbo.mV.size = 3;
-						vbo.mV.stride = LLVertexBuffer::sTypeSize[ LLVertexBuffer::TYPE_VERTEX ];
-						vbo.mV.type = GL_FLOAT;
-					}
-					if( buff->hasDataType( LLVertexBuffer::TYPE_NORMAL ) )
-					{
-						buff->getNormalStrider( normal_strider );
-						vbo.mN.p = normal_strider.get();
-						vbo.mN.stride = LLVertexBuffer::sTypeSize[ LLVertexBuffer::TYPE_NORMAL ];
-						vbo.mN.type = GL_FLOAT;
-					}
-					if( buff->hasDataType( LLVertexBuffer::TYPE_TEXCOORD0 ) )
-					{
-						buff->getTexCoord0Strider( tc_strider );
-						vbo.mT.p = tc_strider.get();
-						vbo.mT.size = 2;
-						vbo.mT.stride = LLVertexBuffer::sTypeSize[ LLVertexBuffer::TYPE_TEXCOORD0 ];
-						vbo.mT.type = GL_FLOAT;
-					}
-
-					glodInsertElements( mObject[ mdl ], i, GL_TRIANGLES, num_indices, GL_UNSIGNED_SHORT, (U8*)index_strider.get(), 0, 0.f, &vbo );
-					// glodInsertElements( mObject[ mdl ], i, GL_TRIANGLES, num_indices, GL_UNSIGNED_SHORT, (U8*)mVertexBuffer[ 5 ][ mdl ][ i ]->getIndicesPointer(), 0, 0.f );
-					// </FS:ND>
+					glodInsertElements(mObject[mdl], i, GL_TRIANGLES, num_indices, GL_UNSIGNED_SHORT, (U8*) mVertexBuffer[5][mdl][i]->getIndicesPointer(), 0, 0.f);
 				}
 				tri_count += num_indices/3;
 				stop_gloderror();
@@ -2684,65 +2648,28 @@
 			{
 				type_mask = mVertexBuffer[5][base][i]->getTypeMask();
 
+				// <FS:ND> Make sure LLRender::sGLCoreProfile is off, so we get a buffer we can pass into GLOD
+				nd::utils::boolSwitch switchCoreProfile ( &LLRender::sGLCoreProfile, false );
+				// </FS:	ND>
+
 				LLPointer<LLVertexBuffer> buff = new LLVertexBuffer(type_mask, 0);
 
+				// <FS:ND> And reset LLRender::sGLCoreProfile again
+				switchCoreProfile.reset();
+				// </FS:	ND>
+
 				if (sizes[i*2+1] > 0 && sizes[i*2] > 0)
 				{
 					buff->allocateBuffer(sizes[i*2+1], sizes[i*2], true);
 					buff->setBuffer(type_mask);
-
-					// <FS:ND> Fix glod so it works when just using the opengl core profile
-					LLStrider<LLVector3> vertex_strider;
-					LLStrider<LLVector3> normal_strider;
-					LLStrider<LLVector2> tc_strider;
-
-					LLStrider< U16 > index_strider;
-					buff->getIndexStrider( index_strider );
-
-					glodVBO vbo = {};
-
-					if( buff->hasDataType( LLVertexBuffer::TYPE_VERTEX ) )
-					{
-						buff->getVertexStrider( vertex_strider );
-						vbo.mV.p = vertex_strider.get();
-						vbo.mV.size = 3;
-						vbo.mV.stride = LLVertexBuffer::sTypeSize[ LLVertexBuffer::TYPE_VERTEX ];
-						vbo.mV.type = GL_FLOAT;
-					}
-					if( buff->hasDataType( LLVertexBuffer::TYPE_NORMAL ) )
-					{
-						buff->getNormalStrider( normal_strider );
-						vbo.mN.p = normal_strider.get();
-						vbo.mN.stride = LLVertexBuffer::sTypeSize[ LLVertexBuffer::TYPE_NORMAL ];
-						vbo.mN.type = GL_FLOAT;
-					}
-					if( buff->hasDataType( LLVertexBuffer::TYPE_TEXCOORD0 ) )
-					{
-						buff->getTexCoord0Strider( tc_strider );
-						vbo.mT.p = tc_strider.get();
-						vbo.mT.size = 2;
-						vbo.mT.stride = LLVertexBuffer::sTypeSize[ LLVertexBuffer::TYPE_TEXCOORD0 ];
-						vbo.mT.type = GL_FLOAT;
-					}
-
-					glodFillElements( mObject[ base ], names[ i ], GL_UNSIGNED_SHORT, (U8*)index_strider.get(), &vbo );
-					// glodFillElements(mObject[base], names[i], GL_UNSIGNED_SHORT, (U8*) buff->getIndicesPointer());
-					// </FS:ND>
-
+					glodFillElements(mObject[base], names[i], GL_UNSIGNED_SHORT, (U8*) buff->getIndicesPointer());
 					stop_gloderror();
 				}
 				else
 				{ //this face was eliminated, create a dummy triangle (one vertex, 3 indices, all 0)
 					buff->allocateBuffer(1, 3, true);
 					memset((U8*) buff->getMappedData(), 0, buff->getSize());
-
-					// <FS:ND> Fix when running with opengl core profile
-					LLStrider< U16 > index_strider;
-					buff->getIndexStrider( index_strider );
-
-					memset( (U8*)index_strider.get(), 0, buff->getIndicesSize() );
-					// memset( (U8*)buff->getIndicesPointer(), 0, buff->getIndicesSize() );
-					// </FS:ND>
+					memset((U8*) buff->getIndicesPointer(), 0, buff->getIndicesSize());
 				}
 
 				buff->validateRange(0, buff->getNumVerts()-1, buff->getNumIndices(), 0);
@@ -3485,8 +3412,16 @@
 				mask |= LLVertexBuffer::MAP_WEIGHT4;
 			}
 
+			// <FS:ND> Make sure LLRender::sGLCoreProfile is off, so we get a buffer we can pass into GLOD
+			nd::utils::boolSwitch switchCoreProfile ( &LLRender::sGLCoreProfile, false );
+			// </FS:ND>
+
 			vb = new LLVertexBuffer(mask, 0);
 			
+			// <FS:ND> And reset LLRender::sGLCoreProfile again
+			switchCoreProfile.reset();
+			// </FS:ND>
+
 			vb->allocateBuffer(num_vertices, num_indices, TRUE);
 
 			LLStrider<LLVector3> vertex_strider;
diff -r aae0229b1c97 -r e1f0e4441761 package_override_vc12.ini
--- a/package_override_vc12.ini	Fri Mar 10 11:45:38 2017 +0100
+++ b/package_override_vc12.ini	Tue Mar 07 20:26:23 2017 +0100
@@ -29,7 +29,7 @@
 windows = http://downloads.phoenixviewer.com/freetype-2.3.9.201505100250-r61-windows-x64-201505100250-r61.tar.bz2|c3ea8e68d0a0f399253e8d578ee38da2
 
 [glod]
-windows = http://downloads.phoenixviewer.com/glod-1.0pre3.201703081200-windows64-201703081200.tar.bz2|7eceae7977650ebc6124a9dfee3c4d84
+windows = http://downloads.phoenixviewer.com/glod-1.0pre4.201508040902-r83-windows-x64-201508040902-r83.tar.bz2|4b5addbe8678a85420994351d6888cd8
 
 [libhunspell]
 windows =  http://downloads.phoenixviewer.com/libhunspell-1.3.2.201412051002-windows-x64-201412051002.tar.bz2|60feb84271fc5a36a5443b2fdd4ae488
